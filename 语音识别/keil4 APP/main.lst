C51 COMPILER V9.54   MAIN                                                                  07/20/2021 20:01:55 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\obj\main.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE ..\code\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\code;..\user) DEBUG OBJE
                    -CTEXTEND PRINT(.\main.lst) TABS(2) OBJECT(..\obj\main.obj)

line level    source

   1          /***************************飞音云电子****************************
   2          **  工程名称：YS-V0.7语音识别模块驱动程序
   3          **  CPU: STC11L08XE
   4          **  晶振：22.1184MHZ
   5          **  波特率：9600 bit/S
   6          **  配套产品信息：YS-V0.7语音识别开发板
   7          **                http://yuesheng001.taobao.com
   8          **  作者：zdings
   9          **  联系：751956552@qq.com
  10          **  修改日期：2013.9.13
  11          **  说明：口令模式+IO控制： 即每次识别时都需要说“小杰”这个口令 ，才能够进行下一级的识别
  12          /***************************飞音云电子******************************/
  13          #include "config.h"
  14          /************************************************************************************/
  15          //  nAsrStatus 用来在main主程序中表示程序运行的状态，不是LD3320芯片内部的状态寄存器
  16          //  LD_ASR_NONE:    表示没有在作ASR识别
  17          //  LD_ASR_RUNING：   表示LD3320正在作ASR识别中
  18          //  LD_ASR_FOUNDOK:   表示一次识别流程结束后，有一个识别结果
  19          //  LD_ASR_FOUNDZERO: 表示一次识别流程结束后，没有识别结果
  20          //  LD_ASR_ERROR:   表示一次识别流程中LD3320芯片内部出现不正确的状态
  21          /***********************************************************************************/
  22          uint8 idata nAsrStatus=0; 
  23          void MCU_init(); 
  24          void ProcessInt0(); //识别处理函数
  25          void  delay(unsigned long uldata);
  26          void  User_handle(uint8 dat);//用户执行操作函数
  27          void Led_test(void);//单片机工作指示
  28          void Delay200ms();
  29          uint8_t G0_flag=DISABLE;//运行标志，ENABLE:运行。DISABLE:禁止运行 
  30          sbit LED=P4^2;//信号指示灯
  31          //应用IO口定义 （模块标注 P2）
  32          sbit PA1=P1^0; //对应板上标号 P1.0
  33          sbit PA2=P1^1;  //对应板上标号 P1.1
  34          sbit PA3=P1^2;  //.....
  35          sbit PA4=P1^3;  //.....
  36          sbit PA5=P1^4;  //.....
  37          sbit PA6=P1^5;  //.....
  38          sbit PA7=P1^6;  //对应板上标号 P1.6
  39          sbit PA8=P1^7;  //对应板上标号 P1.7
  40          
  41          
  42          /***********************************************************
  43          * 名    称： void  main(void)
  44          * 功    能： 主函数 程序入口
  45          * 入口参数：  
  46          * 出口参数：
  47          * 说    明：           
  48          * 调用方法： 
  49          **********************************************************/ 
  50          void  main(void)
  51          { 
  52   1        uint8 idata nAsrRes;
  53   1        uint8 i=0;
  54   1        Led_test();
C51 COMPILER V9.54   MAIN                                                                  07/20/2021 20:01:55 PAGE 2   

  55   1        MCU_init();
  56   1        LD_Reset();
  57   1        UartIni(); /*串口初始化*/
  58   1        nAsrStatus = LD_ASR_NONE;   //  初始状态：没有在作ASR
  59   1        #ifdef TEST 
  60   1        PrintCom("一级口令：小电同学\r\n"); /*text.....*/
  61   1        PrintCom("二级口令：1、你是谁\r\n"); /*text.....*/
  62   1        PrintCom("  2、你几岁了\r\n"); /*text.....*/
  63   1        PrintCom("  3、电科专业好不好\r\n"); /*text.....*/
  64   1        #endif
  65   1      
  66   1        
  67   1        
  68   1        while(1)
  69   1        {
  70   2          switch(nAsrStatus)
  71   2          {
  72   3            case LD_ASR_RUNING:
  73   3            case LD_ASR_ERROR:    
  74   3              break;
  75   3            case LD_ASR_NONE:
  76   3            {
  77   4              nAsrStatus=LD_ASR_RUNING;
  78   4              if (RunASR()==0)  /*  启动一次ASR识别流程：ASR初始化，ASR添加关键词语，启动ASR运算*/
  79   4              {
  80   5                nAsrStatus = LD_ASR_ERROR;
  81   5              }
  82   4              break;
  83   4            }
  84   3            case LD_ASR_FOUNDOK: /* 一次ASR识别流程结束，去取ASR识别结果*/
  85   3            {       
  86   4              nAsrRes = LD_GetResult();   /*获取结果*/
  87   4              User_handle(nAsrRes);//用户执行函数 
  88   4              nAsrStatus = LD_ASR_NONE;
  89   4              break;
  90   4            }
  91   3            case LD_ASR_FOUNDZERO:
  92   3            default:
  93   3            {
  94   4              nAsrStatus = LD_ASR_NONE;
  95   4              break;
  96   4            }
  97   3          }// switch        
  98   2        }// while
  99   1      
 100   1      }
 101          /***********************************************************
 102          * 名    称：   LED灯测试
 103          * 功    能： 单片机是否工作指示
 104          * 入口参数： 无 
 105          * 出口参数：无
 106          * 说    明：           
 107          **********************************************************/
 108          void Led_test(void)
 109          {
 110   1        LED=~ LED;
 111   1        Delay200ms();
 112   1        LED=~ LED;
 113   1        Delay200ms();
 114   1        LED=~ LED;
 115   1        Delay200ms();
 116   1        LED=~ LED;
C51 COMPILER V9.54   MAIN                                                                  07/20/2021 20:01:55 PAGE 3   

 117   1        Delay200ms();
 118   1        LED=~ LED;
 119   1        Delay200ms();
 120   1        LED=~ LED;
 121   1      }
 122          /***********************************************************
 123          * 名    称： void MCU_init()
 124          * 功    能： 单片机初始化
 125          * 入口参数：  
 126          * 出口参数：
 127          * 说    明：           
 128          * 调用方法： 
 129          **********************************************************/ 
 130          void MCU_init()
 131          {
 132   1        P0 = 0xff;
 133   1        P1 = 0x00;
 134   1        P2 = 0xff;
 135   1        P3 = 0xff;
 136   1        P4 = 0xff;
 137   1        
 138   1        PA1=1;PA2=1;PA3=1;PA4=1;PA5=1;PA6=1;PA7=1;PA8=1;//初始拉高电平
 139   1      
 140   1        P1M0=0XFF;  //P1端口设置为推挽输出功能，即提高IO口驱动能力，从驱动继电器模块工作
 141   1        P1M1=0X00;
 142   1      
 143   1        LD_MODE = 0;    //  设置MD管脚为低，并行模式读写
 144   1        IE0=1;
 145   1        EX0=1;
 146   1        EA=1;
 147   1      }
 148          /***********************************************************
 149          * 名    称：  延时函数
 150          * 功    能：
 151          * 入口参数：  
 152          * 出口参数：
 153          * 说    明：           
 154          * 调用方法： 
 155          **********************************************************/ 
 156          void Delay200us()   //@22.1184MHz
 157          {
 158   1        unsigned char i, j;
 159   1        _nop_();
 160   1        _nop_();
 161   1        i = 5;
 162   1        j = 73;
 163   1        do
 164   1        {
 165   2          while (--j);
 166   2        } while (--i);
 167   1      }
 168          
 169          void  delay(unsigned long uldata)
 170          {
 171   1        unsigned int j  =  0;
 172   1        unsigned int g  =  0;
 173   1        while(uldata--)
 174   1        Delay200us();
 175   1      }
 176          
 177          void Delay200ms()   //@22.1184MHz
 178          {
C51 COMPILER V9.54   MAIN                                                                  07/20/2021 20:01:55 PAGE 4   

 179   1        unsigned char i, j, k;
 180   1      
 181   1        i = 17;
 182   1        j = 208;
 183   1        k = 27;
 184   1        do
 185   1        {
 186   2          do
 187   2          {
 188   3            while (--k);
 189   3          } while (--j);
 190   2        } while (--i);
 191   1      }
 192          
 193          
 194          void Delay1000ms()    //@22.1184MHz
 195          {
 196   1        unsigned char i, j, k;
 197   1      
 198   1        _nop_();
 199   1        _nop_();
 200   1        i = 85;
 201   1        j = 12;
 202   1        k = 155;
 203   1        do
 204   1        {
 205   2          do
 206   2          {
 207   3            while (--k);
 208   3          } while (--j);
 209   2        } while (--i);
 210   1      }
 211          
 212          void Delay2800ms()    //@22.1184MHz  第一个回答
 213          {
 214   1        unsigned char i, j, k;
 215   1      
 216   1        _nop_();
 217   1        _nop_();
 218   1        i = 236;
 219   1        j = 84;
 220   1        k = 188;
 221   1        do
 222   1        {
 223   2          do
 224   2          {
 225   3            while (--k);
 226   3          } while (--j);
 227   2        } while (--i);
 228   1      }
 229          
 230          void Delay2000ms()    //@22.1184MHz  第二个回答
 231          {
 232   1        unsigned char i, j, k;
 233   1      
 234   1        _nop_();
 235   1        _nop_();
 236   1        i = 169;
 237   1        j = 24;
 238   1        k = 59;
 239   1        do
 240   1        {
C51 COMPILER V9.54   MAIN                                                                  07/20/2021 20:01:55 PAGE 5   

 241   2          do
 242   2          {
 243   3            while (--k);
 244   3          } while (--j);
 245   2        } while (--i);
 246   1      }
 247          
 248          void Delay5000ms()    //@22.1184MHz  第三个回答
 249          {
 250   1        unsigned char i, j, k;
 251   1      
 252   1        i = 165;
 253   1        j = 59;
 254   1        k = 28;
 255   1        do
 256   1        {
 257   2          do
 258   2          {
 259   3            while (--k);
 260   3          } while (--j);
 261   2        } while (--i);
 262   1      }
 263          /***********************************************************
 264          * 名    称： 中断处理函数
 265          * 功    能：
 266          * 入口参数：  
 267          * 出口参数：
 268          * 说    明：           
 269          * 调用方法： 
 270          **********************************************************/ 
 271          void ExtInt0Handler(void) interrupt 0  
 272          {   
 273   1        ProcessInt0();        /*  LD3320 送出中断信号，包括ASR和播放MP3的中断，需要在中断处理函数中分别处理*/
 274   1      }
 275          /***********************************************************
 276          * 名    称：用户执行函数 
 277          * 功    能：识别成功后，执行动作可在此进行修改 
 278          * 入口参数： 无 
 279          * 出口参数：无
 280          * 说    明： 通过控制PAx端口的高低电平，从而控制外部继电器的通断           
 281          **********************************************************/
 282          void  User_handle(uint8 dat)
 283          {     
 284   1            
 285   1           //UARTSendByte(dat);//串口识别码（十六进制）
 286   1           if(0==dat)
 287   1           {
 288   2              G0_flag=ENABLE;
 289   2              LED=0;
 290   2              PrintCom("我在\r\n"); /*text.....*/
 291   2              PA1=0;PA2=1;PA3=1;PA4=1;PA5=1;PA6=1;PA7=1;PA8=1;//改的
 292   2              Delay1000ms();
 293   2              PA1=1;PA2=1;PA3=1;PA4=1;PA5=1;PA6=1;PA7=1;PA8=1;//改的     
 294   2             
 295   2           }
 296   1           else if(ENABLE==G0_flag)
 297   1           {  
 298   2              G0_flag=DISABLE;
 299   2              LED=1;
 300   2             switch(dat)       /*对结果执行相关操作,对应修改*/
 301   2              {
 302   3                case CODE_MZ:     /*命令“身份”*/
C51 COMPILER V9.54   MAIN                                                                  07/20/2021 20:01:55 PAGE 6   

 303   3                  PrintCom("我是电科机器人\r\n"); //串口输出提示信息（可删除）
 304   3                  PA1=1;PA2=0;PA3=1;PA4=1;PA5=1;PA6=1;PA7=1;PA8=1;//改的
 305   3                  Delay2800ms();
 306   3                  PA1=1;PA2=1;PA3=1;PA4=1;PA5=1;PA6=1;PA7=1;PA8=1;//改的          
 307   3                  break;
 308   3                
 309   3                case CODE_NL:  /*命令“年龄”*/
 310   3                  PrintCom("我1岁了\r\n");//串口输出提示信息（可删除）
 311   3                  PA1=1;PA2=1;PA3=0;PA4=1;PA5=1;PA6=1;PA7=1;PA8=1;//改的
 312   3                  Delay2000ms();
 313   3                  PA1=1;PA2=1;PA3=1;PA4=1;PA5=1;PA6=1;PA7=1;PA8=1;//改的
 314   3                  break;
 315   3                
 316   3                case CODE_ZY:   /*命令“专业”*/        
 317   3                  PrintCom("电科专业是最好的专业，我爱电科\r\n"); //串口输出提示信息（可删除）
 318   3                  PA1=1;PA2=1;PA3=1;PA4=0;PA5=1;PA6=1;PA7=1;PA8=1;//改的
 319   3                  Delay5000ms();Delay2000ms();
 320   3                  PA1=1;PA2=1;PA3=1;PA4=1;PA5=1;PA6=1;PA7=1;PA8=1;//改的
 321   3                  break;        
 322   3                
 323   3                    default:PrintCom("请重新识别发口令\r\n"); //串口输出提示信息（可删除）
 324   3                                break;
 325   3              } 
 326   2            } 
 327   1            else  
 328   1            {
 329   2              PrintCom("请说出一级口令\r\n"); //串口输出提示信息（可删除）  
 330   2            }
 331   1      }  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    555    ----
   CONSTANT SIZE    =    182    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      10
   IDATA SIZE       =      1       1
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
